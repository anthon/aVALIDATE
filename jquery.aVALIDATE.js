// Generated by CoffeeScript 1.10.0
(function() {
  (function($, window, undefined_) {
    return $.fn.validate = function(options) {
      var $form, $styles, checkEmail, checkInput, checkValidation, defaults, pattern, required_length, runReg, settings;
      $styles = $('<style id="aVALIDATE_styles"> .required { position: relative; } .required:after { content: " \\002a"; color: #F00; } .aVALIDATE_passed:after { color: #0F0; } </style>');
      defaults = {
        requiredClass: 'required',
        emailName: 'email'
      };
      settings = $.extend({}, defaults, options);
      pattern = /^.+@.+[.].{2,}$/i;
      required_length = 0;
      $form = null;
      checkInput = function($form, $required) {
        var $field;
        $field = $required.is('input,textarea') ? $required : $required.find('input,textarea');
        return $field.on('keyup change input propertychange', function(e) {
          if (e.keyCode === 13) {
            e.preventDefault();
          }
          if ($field.val().length >= 2) {
            $required.addClass('aVALIDATE_passed');
            if ($field.is('[name=' + settings.emailName + ']') && !runReg($field.val())) {
              $required.removeClass('aVALIDATE_passed');
            }
          } else {
            $required.removeClass('aVALIDATE_passed');
          }
          return checkValidation();
        });
      };
      checkEmail = function() {
        var $email, $info, position;
        $email = $form.find('[name=' + settings.emailName + ']');
        $form.append('<div id="emailInfo" class="info">&#8226</div>');
        $info = $("#emailInfo");
        position = $email.position();
        $info.css({
          top: position.top + 4,
          left: position.left + $email.width() + 24,
          position: 'absolute',
          color: '#FF0000'
        });
        return $email.keyup(function(e) {
          var clr;
          if (e.keyCode === 13) {
            e.preventDefault();
          }
          clr = '#FF0000';
          if (runReg($email.val())) {
            $email.addClass('aVALIDATE_passed');
            checkValidation();
          } else {
            $email.removeClass('aVALIDATE_passed');
          }
          return $info.css({
            color: clr
          });
        });
      };
      runReg = function(string) {
        return pattern.test(string);
      };
      checkValidation = function() {
        var $submit;
        $submit = $form.find(":submit");
        if (required_length === $form.find(".aVALIDATE_passed").length) {
          return $submit.removeAttr('disabled').css({
            opacity: 1
          });
        } else {
          return $submit.attr('disabled', 'disabled').css({
            opacity: .24
          });
        }
      };
      return this.each(function() {
        if ($('style#aVALIDATE_styles').length === 0) {
          $('head').append($styles);
        }
        $form = $(this);
        required_length = $form.find('.' + settings.requiredClass).length;
        checkValidation();
        return $form.find(".required").each(function() {
          var $this;
          $this = $(this);
          return checkInput($form, $this);
        });
      });
    };
  })(jQuery, this);

}).call(this);
